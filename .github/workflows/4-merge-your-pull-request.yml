name: "Step 4 - Merge Pull Request"

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: read

jobs:
  get_current_step:
    name: Check Current Step
    runs-on: ubuntu-latest
    outputs:
      current_step: ${{ steps.get_step.outputs.current_step }}
      is_valid: ${{ steps.validate_step.outputs.is_valid }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get Current Step
        id: get_step
        run: |
          STEP_FILE=".github/steps/-step.txt"
          if [ -f "$STEP_FILE" ]; then
            CURRENT_STEP=$(cat "$STEP_FILE")
            echo "current_step=$CURRENT_STEP" >> $GITHUB_OUTPUT
          else
            echo "Error: Step file not found"
            exit 1
          fi

      - name: Validate Step
        id: validate_step
        run: |
          if [[ "$(cat ./.github/steps/-step.txt)" == "4" ]]; then
            echo "is_valid=true" >> $GITHUB_OUTPUT
          else
            echo "is_valid=false" >> $GITHUB_OUTPUT

  verify_merge:
    name: Verify Merge Status
    needs: get_current_step
    if: >-
      ${{ needs.get_current_step.outputs.current_step == '4' &&
          needs.get_current_step.outputs.is_valid == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check if Branch Exists
        id: check_branch
        run: |
          if git branch -r | grep -q "origin/welcome-workflow"; then
            echo "branch_exists=true" >> $GITHUB_OUTPUT
          else
            echo "branch_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Check Workflow File in Main
        id: check_workflow_file
        run: |
          git fetch origin main
          git checkout origin/main
          if [ -f ".github/workflows/welcome.yml" ]; then
            echo "workflow_exists=true" >> $GITHUB_OUTPUT
          else
            echo "workflow_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Validate Workflow File Contents
        if: steps.check_workflow_file.outputs.workflow_exists == 'true'
        run: |
          WORKFLOW_FILE=".github/workflows/welcome.yml"
          if ! grep -q "name:" "$WORKFLOW_FILE" || \
             ! grep -q "jobs:" "$WORKFLOW_FILE" || \
             ! grep -q "steps:" "$WORKFLOW_FILE"; then
            echo "Error: Workflow file is incomplete or missing required elements"
            exit 1
          fi

      - name: Update Progress
        if: success()
        run: |
          STEP_FILE=".github/steps/-step.txt"
          echo "5" > "$STEP_FILE"
          echo "Progress updated to step 5."

  provide_feedback:
    name: Provide Feedback
    needs: [get_current_step, verify_merge]
    if: always()
    runs-on: ubuntu-latest
    
    steps:
      - name: Feedback for Merge Status
        run: |
          if [ "${{ needs.verify_merge.result }}" == "success" ]; then
            echo "✅ Merge verification successful! Proceeding to step 5."
          else
            echo "❌ Merge verification failed. Please check:"
            echo "  - Ensure the branch 'welcome-workflow' is merged into 'main'"
            echo "  - Verify the workflow file '.github/workflows/welcome.yml' exists"
            echo "  - Ensure the workflow file contains the required fields:"
            echo "    * name:"
            echo "    * jobs:"
            echo "    * steps:"
            echo ""
            echo "Manual Steps to Merge:"
            echo "1. Navigate to the Pull Requests tab in GitHub."
            echo "2. Locate the pull request from 'welcome-workflow' to 'main'."
            echo "3. Click 'Merge Pull Request' and confirm."
          fi

  cleanup:
    name: Cleanup
    needs: verify_merge
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Delete Feature Branch
        if: needs.verify_merge.result == 'success'
        run: |
          echo "Deleting 'welcome-workflow' branch..."
          git push origin --delete welcome-workflow || echo "Branch already deleted."
