name: "CodeQL Advanced Security Analysis"

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  schedule:
    - cron: '34 8 * * 0'
  workflow_dispatch:

jobs:
  prepare:
    name: Prepare CodeQL Configuration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create CodeQL Config
        run: |
          mkdir -p .github/codeql
          cat > .github/codeql/config.yml << 'EOL'
          name: "CodeQL Config"
          
          paths:
            - 'src'
            - 'lib'
            - 'app'
            
          paths-ignore:
            - '**/test/**'
            - '**/tests/**'
            - '**/node_modules/**'
            - '**/vendor/**'
            - '**/*.test.js'
            - '**/*.spec.ts'
            
          queries:
            - uses: security-extended
            - uses: security-and-quality
          
          query-filters:
            - exclude:
                id: js/redundant-assignment
            - exclude:
                tags: maintain
                
          EOL

  analyze:
    name: Analyze (${{ matrix.language }})
    needs: prepare
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: 360
    
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: 'python'
            build-mode: 'autodetect'
          - language: 'javascript-typescript'
            build-mode: 'autodetect'
          - language: 'java-kotlin'
            build-mode: 'autodetect'
          - language: 'c-cpp'
            build-mode: 'autodetect'
          - language: 'go'
            build-mode: 'autodetect'
          - language: 'ruby'
            build-mode: 'autodetect'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Setup Python
      if: matrix.language == 'python'
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        cache: 'pip'

    - name: Setup Node.js
      if: matrix.language == 'javascript-typescript'
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Java
      if: matrix.language == 'java-kotlin'
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        queries: security-extended,security-and-quality
        config-file: ./.github/codeql/config.yml
        ram: 6144
        threads: auto

    - name: Build Python
      if: matrix.language == 'python'
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f setup.py ]; then pip install -e .; fi
        if [ -f pyproject.toml ]; then pip install -e .; fi

    - name: Build JavaScript/TypeScript
      if: matrix.language == 'javascript-typescript'
      run: |
        if [ -f package.json ]; then
          npm ci
          npm audit fix || true
          npm run build --if-present
        fi

    - name: Build Java/Kotlin
      if: matrix.language == 'java-kotlin'
      run: |
        if [ -f pom.xml ]; then
          mvn clean install -DskipTests
        elif [ -f build.gradle ]; then
          ./gradlew build -x test
        fi

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        upload: true
        output: sarif-results

    - name: Process Analysis Results
      if: always()
      run: |
        if [ -d "sarif-results" ]; then
          echo "Creating detailed analysis report..."
          echo "## CodeQL Security Analysis Report" > analysis-report.md
          echo "### Analysis for ${{ matrix.language }}" >> analysis-report.md
          echo "Completed at: $(date)" >> analysis-report.md
          echo "#### Findings Summary" >> analysis-report.md
          
          if [ -f sarif-results/*.sarif ]; then
            echo "- SARIF results available" >> analysis-report.md
            # Add basic statistics if possible
            ALERTS=$(grep -c "warning" sarif-results/*.sarif || echo "0")
            echo "- Number of potential issues: $ALERTS" >> analysis-report.md
          else
            echo "- No SARIF results found" >> analysis-report.md
          fi
        fi

    - name: Upload Analysis Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: codeql-analysis-${{ matrix.language }}
        path: |
          analysis-report.md
          sarif-results
        retention-days: 30

  summary:
    name: Analysis Summary
    needs: analyze
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Create Summary
        run: |
          echo "# CodeQL Analysis Complete" > summary.md
          echo "## Status by Language" >> summary.md
          echo "- Python: ${{ needs.analyze.result }}" >> summary.md
          echo "- JavaScript/TypeScript: ${{ needs.analyze.result }}" >> summary.md
          echo "- Java/Kotlin: ${{ needs.analyze.result }}" >> summary.md
          echo "- C/C++: ${{ needs.analyze.result }}" >> summary.md
          echo "- Go: ${{ needs.analyze.result }}" >> summary.md
          echo "- Ruby: ${{ needs.analyze.result }}" >> summary.md
          
      - name: Upload Summary
        uses: actions/upload-artifact@v3
        with:
          name: codeql-final-summary
          path: summary.md
