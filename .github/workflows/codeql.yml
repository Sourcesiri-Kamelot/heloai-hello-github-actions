name: "CodeQL Advanced Security Analysis"

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  schedule:
    - cron: '34 8 * * 0'  # Weekly on Sunday at 8:34
  workflow_dispatch:  # Allow manual triggering

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: 360  # Set maximum runtime
    
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: 'python'
            build-mode: 'autodetect'
          - language: 'javascript-typescript'
            build-mode: 'autodetect'
          - language: 'java-kotlin'
            build-mode: 'autodetect'
          - language: 'c-cpp'
            build-mode: 'autodetect'
          - language: 'go'
            build-mode: 'autodetect'
          - language: 'ruby'
            build-mode: 'autodetect'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Setup Python
      if: matrix.language == 'python'
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Setup Node.js
      if: matrix.language == 'javascript-typescript'
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Setup Java
      if: matrix.language == 'java-kotlin'
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Cache dependencies
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          ~/.pip
          ~/.gradle
        key: ${{ runner.os }}-${{ matrix.language }}-${{ hashFiles('**/lockfiles') }}

    # Initialize CodeQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        queries: security-extended,security-and-quality
        config-file: ./.github/codeql/codeql-config.yml

    # Custom build steps for different languages
    - name: Build Python
      if: matrix.language == 'python'
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f setup.py ]; then pip install -e .; fi

    - name: Build JavaScript/TypeScript
      if: matrix.language == 'javascript-typescript'
      run: |
        if [ -f package.json ]; then
          npm ci
          npm run build --if-present
        fi

    - name: Build Java/Kotlin
      if: matrix.language == 'java-kotlin'
      run: |
        if [ -f pom.xml ]; then
          mvn clean install -DskipTests
        elif [ -f build.gradle ]; then
          ./gradlew build -x test
        fi

    # Perform CodeQL Analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        upload: true
        output: sarif-results

    # Upload SARIF results
    - name: Upload SARIF results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: sarif-results

    # Generate and upload analysis summary
    - name: Generate Analysis Summary
      if: always()
      run: |
        echo "## CodeQL Analysis Summary for ${{ matrix.language }}" > analysis-summary.md
        echo "Analysis completed at $(date)" >> analysis-summary.md
        if [ -f sarif-results/*.sarif ]; then
          echo "- Results available in SARIF format" >> analysis-summary.md
        fi

    - name: Upload Analysis Summary
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: codeql-analysis-summary-${{ matrix.language }}
        path: analysis-summary.md
        
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        config-file: ./.github/codeql/codeql-config.yml  # Reference the config file
        queries: security-extended,security-and-quality
